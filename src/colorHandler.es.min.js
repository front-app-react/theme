import{getColorWithKeyCss as o}from"./getColorWithKeyCss.es.min.js";import r from"deepmerge";const e=(o=Object(),e=Object())=>(o=r(o,e),0<Object.keys(o).length?o:void 0),n=(r,n=!0)=>{var a=e(r.$textColor?.variant,r.$textColor?.hover),c=e(a,r.$textColor?.active),l=e(r.$bgColor?.variant,r.$bgColor?.hover),t=e(l,r.$bgColor?.active),p=r.$borderColor?.variant,$=e(p,r.$borderColor?.hover),i=e($,r.$borderColor?.active);return`\n  &:disabled{\n    ${o({name:"color",color:{name:"txt"},props:r})}\n    ${o({name:"background-color",color:{name:"grey"},props:r})}\n    ${o({name:"border-color",color:{name:"grey"},props:r})}\n  }\n\n  &:not(:disabled){\n    ${c||r.$textColor?.variant?o({name:"color",color:r.$isActive?c:r.$textColor?.variant,props:r}):""}\n   \n    ${t||r.$bgColor?.variant?o({name:"background-color",color:r.$isActive?t:r.$bgColor?.variant,props:r}):"background-color : transparent;"}\n    ${p||i?o({name:"border-color",color:r.$isActive?i:p,props:r}):"border-color : transparent;"}\n    ${n&&!r.$isActive?`\n    &:hover{\n      ${a?o({name:"color",color:a,props:r}):""}\n      ${l?o({name:"background-color",color:l,props:r}):""}\n      ${$?o({name:"border-color",color:$,props:r}):""}\n    }\n    &:active{\n      ${c?o({name:"color",color:c,props:r}):""}\n      ${t?o({name:"background-color",color:t,props:r}):""}\n      ${i?o({name:"border-color",color:i,props:r}):""}\n    }\n    `:""}\n  `};export{n as colorHandler};
